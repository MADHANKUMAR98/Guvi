package pojo;

import java.util.HashMap;
import java.util.Map;

public class Customer {
    private String id;
    private String name;
    private String address;
    private String meterNumber;
    private String password;

    private Map<String, Usage> usageMap;
    private Map<String, Bill> billMap;
    private Map<String, Payment> paymentMap;

    public Customer(String id, String name, String address, String meterNumber, String password) {
        this.id = id;
        this.name = name;
        this.address = address;
        this.meterNumber = meterNumber;
        this.password = password;
        this.usageMap = new HashMap<>();
        this.billMap = new HashMap<>();
        this.paymentMap = new HashMap<>();
    }

    // Getters and Setters...
}

package pojo;

public class Bill {
    private String billId;
    private String month;
    private double amount;

    public Bill(String billId, String month, double amount) {
        this.billId = billId;
        this.month = month;
        this.amount = amount;
    }

    // Getters and Setters...
}
package pojo;

import java.time.LocalDateTime;

public class Payment {
    private String paymentId;
    private String billId;
    private double amountPaid;
    private LocalDateTime timestamp;
    private boolean isPaid;

    public Payment(String paymentId, String billId, double amountPaid, LocalDateTime timestamp, boolean isPaid) {
        this.paymentId = paymentId;
        this.billId = billId;
        this.amountPaid = amountPaid;
        this.timestamp = timestamp;
        this.isPaid = isPaid;
    }

    // Getters and Setters...
}

package dao;

import pojo.Customer;

import java.util.HashMap;
import java.util.Map;

public class CustomerDAO {
    private Map<String, Customer> customerMap = new HashMap<>();

    public void addCustomer(Customer customer) {
        customerMap.put(customer.getId(), customer);
    }

    public Customer getCustomerById(String id) {
        return customerMap.get(id);
    }

    public Map<String, Customer> getAllCustomers() {
        return customerMap;
    }

    public void updateCustomer(Customer customer) {
        customerMap.put(customer.getId(), customer);
    }

    public void deleteCustomer(String id) {
        customerMap.remove(id);
    }
}

package service;

import pojo.Customer;
import pojo.Usage;
import pojo.Bill;
import pojo.Payment;

public interface CustomerService {
    void recordUsage(Customer customer, String month, int electricityUsed);
    void generateBill(Customer customer, String month, double amount);
    void makePayment(Customer customer, String billId, double amountPaid);
    // Additional service methods...
}

package service;

import pojo.Bill;
import pojo.Customer;
import pojo.Payment;
import pojo.Usage;

import dao.CustomerDAO;

import java.time.LocalDateTime;
import java.util.UUID;

public class CustomerServiceImpl implements CustomerService {
    private CustomerDAO customerDAO = new CustomerDAO();

    @Override
    public void recordUsage(Customer customer, String month, int electricityUsed) {
        String usageId = UUID.randomUUID().toString();
        Usage usage = new Usage(usageId, month, electricityUsed);
        customer.getUsageMap().put(usageId, usage);
        customerDAO.updateCustomer(customer);
    }

    @Override
    public void generateBill(Customer customer, String month, double amount) {
        String billId = UUID.randomUUID().toString();
        Bill bill = new Bill(billId, month, amount);
        customer.getBillMap().put(billId, bill);
        customerDAO.updateCustomer(customer);
    }

    @Override
    public void makePayment(Customer customer, String billId, double amountPaid) {
        String paymentId = UUID.randomUUID().toString();
        LocalDateTime timestamp = LocalDateTime.now();
        Payment payment = new Payment(paymentId, billId, amountPaid, timestamp, true);
        customer.getPaymentMap().put(paymentId, payment);
        customerDAO.updateCustomer(customer);
    }
    
    // Additional business logic...
}
package presentation;

import pojo.Bill;
import pojo.Customer;
import pojo.Payment;
import service.CustomerService;
import service.CustomerServiceImpl;

import java.util.Map;
import java.util.Scanner;

public class AdminMenu {
    private CustomerService customerService = new CustomerServiceImpl();

    public void generateBillForCustomer(Customer customer) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter month for which bill is to be generated:");
        String month = scanner.nextLine();
        System.out.println("Enter amount:");
        double amount = scanner.nextDouble();
        
        customerService.generateBill(customer, month, amount);
        System.out.println("Bill generated successfully with unique Bill ID.");
    }

    public void viewPaymentHistory(Customer customer) {
        Map<String, Payment> payments = customer.getPaymentMap();
        if (payments.isEmpty()) {
            System.out.println("No payments found.");
        } else {
            for (Payment payment : payments.values()) {
                System.out.println("Payment ID: " + payment.getPaymentId());
                System.out.println("Bill ID: " + payment.getBillId());
                System.out.println("Amount Paid: " + payment.getAmountPaid());
                System.out.println("Timestamp: " + payment.getTimestamp());
                System.out.println("Paid: " + (payment.isPaid() ? "Yes" : "No"));
                System.out.println("-------------------------------");
            }
        }
    }
}
